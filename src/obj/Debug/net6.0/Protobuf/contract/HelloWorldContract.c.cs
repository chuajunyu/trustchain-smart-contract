// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/contract/hello_world_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.TrustChain {

  #region Events
  #endregion
  public static partial class TrustChainContainer
  {
    static readonly string __ServiceName = "TrustChain";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.TransferProposal> __Marshaller_TransferProposal = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.TransferProposal.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.TransferID> __Marshaller_TransferID = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.TransferID.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.UserAddressTokenIDPair> __Marshaller_UserAddressTokenIDPair = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.UserAddressTokenIDPair.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.UserAddress> __Marshaller_UserAddress = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.UserAddress.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.RepeatedString> __Marshaller_RepeatedString = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.RepeatedString.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.Transfer> __Marshaller_Transfer = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.Transfer.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Contracts.TrustChain.TransferProposal, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ProposeTransfer = new aelf::Method<global::AElf.Contracts.TrustChain.TransferProposal, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ProposeTransfer",
        __Marshaller_TransferProposal,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AcceptTransfer = new aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AcceptTransfer",
        __Marshaller_TransferID,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.UserAddressTokenIDPair, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveApprovedProposal = new aelf::Method<global::AElf.Contracts.TrustChain.UserAddressTokenIDPair, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveApprovedProposal",
        __Marshaller_UserAddressTokenIDPair,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedString> __Method_GetPendingProposals = new aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedString>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPendingProposals",
        __Marshaller_UserAddress,
        __Marshaller_RepeatedString);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedString> __Method_GetPendingAcceptances = new aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedString>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPendingAcceptances",
        __Marshaller_UserAddress,
        __Marshaller_RepeatedString);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::AElf.Contracts.TrustChain.Transfer> __Method_GetTransfer = new aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::AElf.Contracts.TrustChain.Transfer>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTransfer",
        __Marshaller_TransferID,
        __Marshaller_Transfer);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedString> __Method_GetApprovedProposals = new aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedString>(
        aelf::MethodType.View,
        __ServiceName,
        "GetApprovedProposals",
        __Marshaller_UserAddress,
        __Marshaller_RepeatedString);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.TrustChain.HelloWorldContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::AElf.Contracts.TrustChain.HelloWorldContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of TrustChain</summary>
    public abstract partial class TrustChainBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.TrustChain.TrustChainState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ProposeTransfer(global::AElf.Contracts.TrustChain.TransferProposal input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty AcceptTransfer(global::AElf.Contracts.TrustChain.TransferID input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveApprovedProposal(global::AElf.Contracts.TrustChain.UserAddressTokenIDPair input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.TrustChain.RepeatedString GetPendingProposals(global::AElf.Contracts.TrustChain.UserAddress input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.TrustChain.RepeatedString GetPendingAcceptances(global::AElf.Contracts.TrustChain.UserAddress input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.TrustChain.Transfer GetTransfer(global::AElf.Contracts.TrustChain.TransferID input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::AElf.Contracts.TrustChain.RepeatedString GetApprovedProposals(global::AElf.Contracts.TrustChain.UserAddress input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(TrustChainBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_ProposeTransfer, serviceImpl.ProposeTransfer)
          .AddMethod(__Method_AcceptTransfer, serviceImpl.AcceptTransfer)
          .AddMethod(__Method_RemoveApprovedProposal, serviceImpl.RemoveApprovedProposal)
          .AddMethod(__Method_GetPendingProposals, serviceImpl.GetPendingProposals)
          .AddMethod(__Method_GetPendingAcceptances, serviceImpl.GetPendingAcceptances)
          .AddMethod(__Method_GetTransfer, serviceImpl.GetTransfer)
          .AddMethod(__Method_GetApprovedProposals, serviceImpl.GetApprovedProposals).Build();
    }

  }
}
#endregion

