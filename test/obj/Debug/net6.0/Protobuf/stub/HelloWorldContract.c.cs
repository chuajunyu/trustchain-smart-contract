// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/stub/hello_world_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.TrustChain {

  #region Events
  #endregion
  internal static partial class TrustChainContainer
  {
    static readonly string __ServiceName = "TrustChain";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.TransferProposal> __Marshaller_TransferProposal = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.TransferProposal.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.TransferID> __Marshaller_TransferID = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.TransferID.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.UserAddress> __Marshaller_UserAddress = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.UserAddress.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.RepeatedTransfer> __Marshaller_RepeatedTransfer = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.RepeatedTransfer.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TrustChain.Transfer> __Marshaller_Transfer = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TrustChain.Transfer.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Contracts.TrustChain.TransferProposal, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ProposeTransfer = new aelf::Method<global::AElf.Contracts.TrustChain.TransferProposal, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ProposeTransfer",
        __Marshaller_TransferProposal,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AcceptTransfer = new aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AcceptTransfer",
        __Marshaller_TransferID,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedTransfer> __Method_GetPendingProposals = new aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedTransfer>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPendingProposals",
        __Marshaller_UserAddress,
        __Marshaller_RepeatedTransfer);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedTransfer> __Method_GetPendingAcceptances = new aelf::Method<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedTransfer>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPendingAcceptances",
        __Marshaller_UserAddress,
        __Marshaller_RepeatedTransfer);

    static readonly aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::AElf.Contracts.TrustChain.Transfer> __Method_GetTransfer = new aelf::Method<global::AElf.Contracts.TrustChain.TransferID, global::AElf.Contracts.TrustChain.Transfer>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTransfer",
        __Marshaller_TransferID,
        __Marshaller_Transfer);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.TrustChain.HelloWorldContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::AElf.Contracts.TrustChain.HelloWorldContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    public class TrustChainStub : aelf::ContractStubBase
    {
      public aelf::IMethodStub<global::AElf.Contracts.TrustChain.TransferProposal, global::Google.Protobuf.WellKnownTypes.Empty> ProposeTransfer
      {
        get { return __factory.Create(__Method_ProposeTransfer); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.TrustChain.TransferID, global::Google.Protobuf.WellKnownTypes.Empty> AcceptTransfer
      {
        get { return __factory.Create(__Method_AcceptTransfer); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedTransfer> GetPendingProposals
      {
        get { return __factory.Create(__Method_GetPendingProposals); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.TrustChain.UserAddress, global::AElf.Contracts.TrustChain.RepeatedTransfer> GetPendingAcceptances
      {
        get { return __factory.Create(__Method_GetPendingAcceptances); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.TrustChain.TransferID, global::AElf.Contracts.TrustChain.Transfer> GetTransfer
      {
        get { return __factory.Create(__Method_GetTransfer); }
      }

    }
  }
}
#endregion

